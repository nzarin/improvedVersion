# ::::::::::::::::::::::::::::::::::::::::::::::::::::::
# :: Kademlia Default Configuration
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::

# ::::: GLOBAL ::::::


K 5                                     # Random seed (for reproducibility)
SIZE 1000                               # network size
SIM_TIME 10*1000*60*60                  # 10 hours of simulation time
MINDELAY 100                           # minimum x ms path delay
MAXDELAY 100                           # maximum x ms path delay
DROPRATE 0                              # reliable channels -> no messages are dropped
TRAFFIC_STEP (SIM_TIME)/SIZE           # number of initiated search operations per node
OBSERVER_STEP 100000                    # every x steps at which observer is executed
TURBULENCE_STEP (SIM_TIME*20)/SIZE     # around 5% of node turnover during the simulation
TURBULENCE_P_IDLE 0                    # probability that the current execution does nothing (no adding and no removing)
TURBULENCE_P_REM 0                   # probability that a random node is removed in this execution (failure of existing node)
TURBULENCE_P_ADD 0                   # probability that a new node is added in this execution

# ::::: NETWORK :::::
random.seed 24680
simulation.experiments 1
simulation.endtime SIM_TIME
network.size SIZE


# ::::: LAYERS :::::
protocol.0link peersim.core.IdleProtocol

protocol.1uniftr peersim.transport.UniformRandomTransport
protocol.1uniftr.mindelay MINDELAY
protocol.1uniftr.maxdelay MAXDELAY

protocol.2unreltr peersim.transport.UnreliableTransport
protocol.2unreltr.drop DROPRATE
protocol.2unreltr.transport 1uniftr

protocol.3kademlia peersim.kademlia.KademliaProtocol
protocol.3kademlia.transport 2unreltr


# ::::: INITIALIZERS :::::
init.0randlink peersim.dynamics.WireKOut
init.0randlink.k K
init.0randlink.protocol 0link

init.1uniqueNodeID peersim.kademlia.CustomDistribution
init.1uniqueNodeID.protocol 3kademlia

init.2statebuilder peersim.kademlia.StateBuilder
init.2statebuilder.protocol 3kademlia
init.2statebuilder.transport 2unreltr



# ::::: CONTROLS :::::

# traffic generator
control.0traffic peersim.kademlia.TrafficGenerator
control.0traffic.protocol 3kademlia
control.0traffic.step TRAFFIC_STEP

# turbolence
control.2turbolenceAdd peersim.kademlia.Turbulence
control.2turbolenceAdd.protocol 3kademlia
control.2turbolenceAdd.transport 2unreltr
control.2turbolenceAdd.step TURBULENCE_STEP
control.2turbolenceAdd.p_idle TURBULENCE_P_IDLE
control.2turbolenceAdd.p_rem TURBULENCE_P_REM
control.2turbolenceAdd.p_add TURBULENCE_P_ADD



# ::::: OBSERVER :::::
control.3 peersim.kademlia.KademliaObserver
control.3.protocol 3kademlia
control.3.step OBSERVER_STEP

